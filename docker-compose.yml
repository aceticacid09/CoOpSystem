services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.Golang
    container_name: backend-service
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    ports:
      - "${APP_PORT}:8000"
    env_file: .env
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - ./backend/uploads/public_docs:/app/uploads/public_docs      # public documents folder 
      - ./backend/uploads/documents:/app/uploads/documents          # attachment documents folder
      - ./backend/uploads/news:/app/uploads/news                    # news uploads folder
      - ./backend/uploads/profile:/app/uploads/profile              # profile image folder
      - ./backend/uploads/student_docs:/app/uploads/student_docs    # student documents folder

  db:
    build:
      context: ./database/postgres-sql
      dockerfile: Dockerfile.PostgreSQL
    container_name: postgres_db-service
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_db_service
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    restart: unless-stopped
    depends_on:
      - db

volumes:
  postgres_data:
  pgadmin_data: